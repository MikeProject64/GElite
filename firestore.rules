
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default-deny all access to prevent unintentional data exposure.
    match /{path=**} {
      allow read, write: if false;
    }

    // Allow a user to manage their own 'users' and 'userSettings' document.
    match /users/{userId} {
      allow read, create: if request.auth.uid == userId;
    }
    match /userSettings/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // This single rule applies to all data collections where documents are owned by a user.
    // This includes: customers, serviceOrders, quotes, collaborators, inventory, etc.
    // The security model relies on a `userId` field in each document.
    match /{collection}/{docId} {
      
      // A user can read, update, or delete a document if their ID matches the `userId` in that document.
      // This rule also covers `list` (query) operations. Firestore security rules ensure that
      // any query on a collection is only allowed if it includes a `where('userId', '==', request.auth.uid)` clause.
      allow read, update, delete: if request.auth.uid == resource.data.userId;

      // A user can create a document if they are setting their own ID as the `userId`.
      allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}
