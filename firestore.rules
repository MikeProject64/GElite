rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(doc) {
      return isAuthenticated() && doc.userId == request.auth.uid;
    }

    function isCreatingOwnData() {
      return isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }

    function isAdmin() {
      return isAuthenticated() && exists(/databases/$(database)/documents/users/$(request.auth.uid))
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }


    // --- Collection Rules ---

    // Publicly readable, admin-writable collections
    match /siteConfig/main {
      allow get: if true;
      allow read, list, write: if isAdmin(); // Admins can manage
    }

    match /plans/{planId} {
      allow get, list: if true; // Plans are public to show on landing/signup
      allow read, write: if isAdmin(); // Only admins can manage plans
    }

    // User management collection
    match /users/{userId} {
      allow create: if request.resource.data.uid == userId && request.resource.data.role == 'user';
      allow read, update: if request.auth.uid == userId;
      allow list, delete, write: if isAdmin();
    }

    // User-specific settings for appearance overrides
    match /userSettings/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      allow list: if isAdmin();
    }

    // User-owned data collections
    match /customers/{customerId} {
      allow read, update, delete: if isOwner(resource.data) || isAdmin();
      allow create: if isCreatingOwnData();
      allow list: if isAuthenticated(); // The client-side query must filter by userId
    }

    match /serviceOrders/{orderId} {
      allow read, update, delete: if isOwner(resource.data) || isAdmin();
      allow create: if isCreatingOwnData();
      allow list: if isAuthenticated();
    }

    match /quotes/{quoteId} {
      allow read, update, delete: if isOwner(resource.data) || isAdmin();
      allow create: if isCreatingOwnData();
      allow list: if isAuthenticated();
    }
    
    match /collaborators/{collaboratorId} {
      allow read, update, delete: if isOwner(resource.data) || isAdmin();
      allow create: if isCreatingOwnData();
      allow list: if isAuthenticated();
    }
    
    match /inventory/{itemId} {
      allow read, update, delete: if isOwner(resource.data) || isAdmin();
      allow create: if isCreatingOwnData();
      allow list: if isAuthenticated();
    }

    match /inventoryMovements/{movementId} {
      allow read, update, delete: if isOwner(resource.data) || isAdmin();
      allow create: if isCreatingOwnData();
      allow list: if isAuthenticated();
    }
    
    match /timelineNotes/{noteId} {
      allow read, update, delete: if isOwner(resource.data) || isAdmin();
      allow create: if isCreatingOwnData();
      allow list: if isAuthenticated();
    }
  }
}
