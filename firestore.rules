rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // Checks if the requesting user has an 'admin' role.
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Checks if the requesting user is the owner of the document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Checks if the user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }

    // --- Global Configuration ---
    // siteConfig: Readable by anyone (for feature flags/landing page), writable only by admins.
    match /siteConfig/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // plans: Readable by anyone (for pricing page), writable only by admins.
    match /plans/{planId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // --- User Management ---
    // users: Can be read/updated by the owner or an admin. Can be created by the new user on signup.
    match /users/{userId} {
      allow read, update: if isAdmin() || isOwner(userId);
      allow create: if isOwner(userId);
    }

    // userSettings: Can be read/written only by the owner or an admin.
    match /userSettings/{userId} {
        allow read, write: if isAdmin() || isOwner(userId);
    }
    
    // --- User-Owned Application Data ---
    // This rule applies to all collections that are owned by a specific user.
    // An admin can manage any document.
    // A regular user can create, read, update, and delete their own documents.
    match /{collection}/{docId} 
        where collection in ['customers', 'serviceOrders', 'quotes', 'collaborators', 'inventory', 'inventoryMovements', 'timelineNotes'] {
      
      // Allow read, update, delete if the user is an admin OR if they are the owner of the document.
      allow read, update, delete: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      
      // Allow create if the user is an admin OR if the new document's userId matches their own.
      allow create: if isAdmin() || (isSignedIn() && request.resource.data.userId == request.auth.uid);
    }
  }
}
