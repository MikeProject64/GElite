rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is the owner of a document.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Rule for user-specific documents like their own profile or settings.
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    match /userSettings/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Rules for user-owned content collections.
    
    // Customers
    match /customers/{customerId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Service Orders
    match /serviceOrders/{orderId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Inventory
    match /inventory/{itemId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Quotes
    match /quotes/{quoteId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    // Managers
    match /managers/{managerId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
  }
}
