
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if data belongs to the requesting user
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read/update their own data. Admins can read/write any user.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null; // Allow any authenticated user to create their own record
    }

    // General rule for user-owned data collections
    match /{collection}/{docId} {
      // List of collections where documents are owned by users via a 'userId' field.
      // This rule applies to: serviceOrders, quotes, customers, collaborators, 
      // inventory, inventoryMovements, timelineNotes, quickNotes, serviceAgreements
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Public read-only collections
    match /siteConfig/{docId} {
      allow read: if true;
      allow write: if isAdmin(); // Only admins can write to site config
    }
    
    match /plans/{planId} {
      allow read: if true;
      allow write: if isAdmin(); // Only admins can write to plans
    }

    match /customPages/{pageId} {
      allow read: if resource.data.isPublic == true;
      allow write: if isAdmin();
    }
  }
}
