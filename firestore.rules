rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Publicly readable global site configuration, writable only by admins.
    match /siteConfig/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      // A user can create their own user document (on signup)
      allow create: if isSignedIn();
      // A user can read and update their own document
      allow read, update: if isSignedIn() && request.auth.uid == userId;
    }

    // User-specific settings are private to the user.
    match /userSettings/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }
    
    // Generic rules for all other user-specific data collections.
    // This applies to customers, serviceOrders, quotes, collaborators, etc.
    match /{collection}/{docId} {
      // Users can read their own documents.
      allow read: if isSignedIn() && request.auth.uid == resource.data.userId;
      
      // Users can update and delete their own documents.
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      
      // Users can create documents and must set themselves as the owner.
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }
  }
}
