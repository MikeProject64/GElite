rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAdmin() {
      // Check if the requesting user has the 'admin' role in their user document.
      // Use exists() to prevent errors if the user doc doesn't exist yet.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    function isOwner(userId) {
      // Check if the requesting user is the owner of the document.
      return request.auth.uid == userId;
    }
    
    // --- Global & Admin Rules ---

    // Site-wide configuration (feature flags, branding, etc.)
    // Admins can manage, everyone can read.
    match /siteConfig/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // User-specific display settings
    // Admins can manage, users can manage their own.
    match /userSettings/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    
    // Subscription plans
    // Admins can manage, everyone can read.
    match /plans/{planId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // User documents (auth profile, role, subscription info)
    // Admins have full control. Users can read their own data.
    // Any authenticated user can create their own user document (on signup).
    match /users/{userId} {
      allow get: if isOwner(userId) || isAdmin();
      allow list: if isAdmin();
      allow create: if isOwner(userId); // User can only create their own document
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // --- Application Data Rules ---

    function isResourceOwner() {
      return request.auth.uid == resource.data.userId;
    }

    function isCreatingOwnResource() {
      return request.auth.uid == request.resource.data.userId;
    }

    match /customers/{docId} {
      allow create: if isCreatingOwnResource() || isAdmin();
      allow read, update, delete: if isResourceOwner() || isAdmin();
    }
    
    match /serviceOrders/{docId} {
      allow create: if isCreatingOwnResource() || isAdmin();
      allow read, update, delete: if isResourceOwner() || isAdmin();
    }

    match /quotes/{docId} {
      allow create: if isCreatingOwnResource() || isAdmin();
      allow read, update, delete: if isResourceOwner() || isAdmin();
    }
    
    match /collaborators/{docId} {
      allow create: if isCreatingOwnResource() || isAdmin();
      allow read, update, delete: if isResourceOwner() || isAdmin();
    }
    
    match /inventory/{docId} {
      allow create: if isCreatingOwnResource() || isAdmin();
      allow read, update, delete: if isResourceOwner() || isAdmin();
    }
    
    match /inventoryMovements/{docId} {
      allow create: if isCreatingOwnResource() || isAdmin();
      allow read, update, delete: if isResourceOwner() || isAdmin();
    }
    
    match /timelineNotes/{docId} {
      allow create: if isCreatingOwnResource() || isAdmin();
      allow read, update, delete: if isResourceOwner() || isAdmin();
    }
  }
}
