
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    function isAdmin() {
      // Safe check: return false if user doc doesn't exist
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Rules for Each Collection ---

    // Public readable, admin writable
    match /siteConfig/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /plans/{planId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User Management
    match /users/{userId} {
      // A user can create their own document upon signup. THIS IS THE KEY FIX.
      allow create: if request.auth.uid == userId;
      // A user can read/update their own doc. Admin can read/update any.
      allow read, update: if isOwner(userId) || isAdmin();
      // Only admins can delete users.
      allow delete: if isAdmin();
    }
    
    // User-specific settings can be read and written by the owner or an admin
    match /userSettings/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // User-specific data collections.
    // The user must be the owner of the document, or an admin.
    match /customers/{customerId} {
      allow read, write: if isOwner(resource.data.userId) || isAdmin();
    }
    match /serviceOrders/{orderId} {
      allow read, write: if isOwner(resource.data.userId) || isAdmin();
    }
    match /quotes/{quoteId} {
       allow read, write: if isOwner(resource.data.userId) || isAdmin();
    }
    match /collaborators/{collabId} {
       allow read, write: if isOwner(resource.data.userId) || isAdmin();
    }
    match /inventory/{itemId} {
      allow read, write: if isOwner(resource.data.userId) || isAdmin();
    }
     match /inventoryMovements/{moveId} {
      allow read, write: if isOwner(resource.data.userId) || isAdmin();
    }
     match /timelineNotes/{noteId} {
      allow read, write: if isOwner(resource.data.userId) || isAdmin();
    }
  }
}
