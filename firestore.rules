
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin(uid) {
      return exists(/databases/$(database)/documents/users/$(uid)) &&
             get(/databases/$(database)/documents/users/$(uid)).data.role == 'admin';
    }

    // Global site configuration
    match /siteConfig/{docId} {
      allow read: if true; // Anyone can read global site settings (for landing page, etc.)
      allow write: if request.auth != null && isAdmin(request.auth.uid); // Only admins can write
    }

    // User settings
    match /userSettings/{userId} {
      // Users can read and write to their own settings document
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // User data (profiles, roles)
    match /users/{userId} {
      // A user can read their own profile
      allow get: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read the full list of users and update any user's data (e.g., change roles)
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);

      // New users can create their own user document upon signup
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // All other collections (customers, serviceOrders, etc.)
    match /{collection}/{docId} {
      // Allow full access if the document's userId matches the authenticated user's ID
      // This is a broad rule that covers all primary user-owned data.
      allow read, write, delete, create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
