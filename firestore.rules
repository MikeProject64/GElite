rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Check if the user is signed in and if their role is 'admin' in the users collection.
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Returns true if the data being written has the owner's UID.
    function isCreatingOwnContent(userId) {
        return isOwner(userId) && request.resource.data.userId == userId;
    }

    // Global Collections - Public read, admin write
    match /siteConfig/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /plans/{planId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User Management
    match /users/{userId} {
      // A user can create their own user document during signup.
      allow create: if isOwner(userId);
      // A user can read or update their own data. An admin can read or update any user's data.
      allow read, update: if isOwner(userId) || isAdmin();
      // Only an admin can delete a user.
      allow delete: if isAdmin();
    }
    
    // User Settings
    match /userSettings/{userId} {
        // A user can create, read, update, and delete their own settings document.
        allow read, write: if isOwner(userId);
    }
    
    // Core Application Data - Each document must have a `userId` field.
    // Users can only interact with their own data.
    
    function isResourceOwner() {
        return request.auth.uid == resource.data.userId;
    }
    
    function isRequestingOwnData() {
        return request.auth.uid == request.resource.data.userId;
    }

    match /customers/{docId} {
      allow read, update, delete: if isResourceOwner() || isAdmin();
      allow create: if isRequestingOwnData();
    }
    
    match /serviceOrders/{docId} {
      allow read, update, delete: if isResourceOwner() || isAdmin();
      allow create: if isRequestingOwnData();
    }
    
    match /quotes/{docId} {
      allow read, update, delete: if isResourceOwner() || isAdmin();
      allow create: if isRequestingOwnData();
    }
    
    match /collaborators/{docId} {
      allow read, update, delete: if isResourceOwner() || isAdmin();
      allow create: if isRequestingOwnData();
    }

    match /inventory/{docId} {
      allow read, update, delete: if isResourceOwner() || isAdmin();
      allow create: if isRequestingOwnData();
    }

    match /inventoryMovements/{docId} {
      allow read, update, delete: if isResourceOwner() || isAdmin();
      allow create: if isRequestingOwnData();
    }

    match /timelineNotes/{docId} {
      allow read, update, delete: if isResourceOwner() || isAdmin();
      allow create: if isRequestingOwnData();
    }
  }
}
